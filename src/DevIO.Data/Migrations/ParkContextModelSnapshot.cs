// <auto-generated />
using System;
using DevIO.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevIO.Data.Migrations
{
    [DbContext(typeof(ParkContext))]
    partial class ParkContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DevIo.Business.Models.Avulso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HrEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HrSaida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<double>("PrecoFinal")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TbAvulsos");
                });

            modelBuilder.Entity("DevIo.Business.Models.Carro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Cor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MensalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Tamanho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoVeiculo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MensalId")
                        .IsUnique();

                    b.ToTable("TbCarros");
                });

            modelBuilder.Entity("DevIo.Business.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("MensalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MensalId")
                        .IsUnique();

                    b.ToTable("TbClientes");
                });

            modelBuilder.Entity("DevIo.Business.Models.Mensal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidadeContrato")
                        .HasColumnType("datetime2");

                    b.Property<double>("ValorMulta")
                        .HasColumnType("float");

                    b.Property<double>("ValorPrecoMensal")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TbMensais");
                });

            modelBuilder.Entity("DevIo.Business.Models.Pagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MensalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MesPagamento")
                        .HasColumnType("int");

                    b.Property<bool>("PagamentoRealizado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MensalId");

                    b.ToTable("TbPagamentos");
                });

            modelBuilder.Entity("DevIo.Business.Models.Preco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeTipoPreco")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TbPrecos");
                });

            modelBuilder.Entity("DevIo.Business.Models.Carro", b =>
                {
                    b.HasOne("DevIo.Business.Models.Mensal", "Mensal")
                        .WithOne("Carro")
                        .HasForeignKey("DevIo.Business.Models.Carro", "MensalId")
                        .IsRequired();
                });

            modelBuilder.Entity("DevIo.Business.Models.Cliente", b =>
                {
                    b.HasOne("DevIo.Business.Models.Mensal", "Mensal")
                        .WithOne("Cliente")
                        .HasForeignKey("DevIo.Business.Models.Cliente", "MensalId")
                        .IsRequired();
                });

            modelBuilder.Entity("DevIo.Business.Models.Pagamento", b =>
                {
                    b.HasOne("DevIo.Business.Models.Mensal", "Mensal")
                        .WithMany("Pagamentos")
                        .HasForeignKey("MensalId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
